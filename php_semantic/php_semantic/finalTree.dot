digraph G {
node105 [label="Program"];
node106 [label="Program List"];
node105->node106 [label=""];
node107 [label="Class Declaration"];
node106->node107 [label="1"];
node107->node108 [label="name"];
node108 [label="f"];
node107->node109 [label="extended name"];
node109 [label="g"];
node110 [label="Class Member List"];
node107->node110 [label="members"];
node111->node112 [label=""];
node112 [label="private static"];
node111 [label="Class Property"];
node110->node111 [label="1"];
node113 [label="Variable List"];
node112->node113 [label=""];
node114 [label="Variable"];
node113->node114 [label="1"];
node114->node115 [label="name"];
node115 [label="g"];
node114->node116 [label="value"];
node116 [label="'lol'"];
node117->node118 [label=""];
node118 [label="public static"];
node117 [label="Class Property"];
node110->node117 [label="2"];
node119 [label="Variable List"];
node118->node119 [label=""];
node120 [label="Variable"];
node119->node120 [label="1"];
node120->node121 [label="name"];
node121 [label="sa"];
node120->node122 [label="value"];
node122 [label="'lol'"];
node123->node124 [label=""];
node124 [label="public"];
node123 [label="Class Const"];
node110->node123 [label="3"];
node125 [label="Variable List"];
node124->node125 [label=""];
node126 [label="Variable"];
node125->node126 [label="1"];
node126->node127 [label="name"];
node127 [label="f"];
node126->node128 [label="value"];
node128 [label="'a'"];
node129->node130 [label=""];
node130 [label="public"];
node129 [label="Class Method"];
node110->node129 [label="4"];
node131 [label="Function Definition"];
node130->node131 [label=""];
node132 [label="Function Header"];
node131->node132 [label="header"];
node132->node133 [label="name"];
node133 [label="func"];
node134 [label="Variable List"];
node132->node134 [label="arguments"];
node135 [label="Variable"];
node134->node135 [label="1"];
node135->node136 [label="name"];
node136 [label="gets"];
node137 [label="Statement List"];
node131->node137 [label="body"];
node137->node138 [label="1"];
node138 [label="="];
node138->node139 [label="left"];
node139 [label="$"];
node139->node140 [label="right"];
node140 [label="ID"];
node140->node141 [label=""];
node141 [label="art"];
node138->node142 [label="right"];
node142 [label="'em'"];
node143 [label="Class Declaration"];
node106->node143 [label="2"];
node143->node144 [label="name"];
node144 [label="gf"];
node145 [label="Class Member List"];
node143->node145 [label="members"];
node146 [label="Function Definition"];
node106->node146 [label="3"];
node147 [label="Function Header"];
node146->node147 [label="header"];
node147->node148 [label="name"];
node148 [label="globs"];
node149 [label="Variable List"];
node147->node149 [label="arguments"];
node150 [label="Variable"];
node149->node150 [label="1"];
node150->node151 [label="name"];
node151 [label="sar"];
node152 [label="Statement List"];
node146->node152 [label="body"];
node152->node153 [label="1"];
node153 [label="="];
node153->node154 [label="left"];
node154 [label="$"];
node154->node155 [label="right"];
node155 [label="ID"];
node155->node156 [label=""];
node156 [label="sar"];
node153->node157 [label="right"];
node157 [label="0"];
node158 [label="Function Definition"];
node106->node158 [label="4"];
node159 [label="Function Header"];
node158->node159 [label="header"];
node159->node160 [label="name"];
node160 [label="gl2"];
node161 [label="Variable List"];
node159->node161 [label="arguments"];
node162 [label="Statement List"];
node158->node162 [label="body"];
node106->node163 [label="5"];
node163 [label="="];
node163->node164 [label="left"];
node164 [label="$"];
node164->node165 [label="right"];
node165 [label="ID"];
node165->node166 [label=""];
node166 [label="g"];
node163->node167 [label="right"];
node167 [label="'hhhhhhhhh'"];
node106->node168 [label="6"];
node168 [label="="];
node168->node169 [label="left"];
node169 [label="$"];
node169->node170 [label="right"];
node170 [label="ID"];
node170->node171 [label=""];
node171 [label="aaaa"];
node168->node172 [label="right"];
node172 [label="6.777000"];
node106->node173 [label="7"];
node173 [label="="];
node173->node174 [label="left"];
node174 [label="$"];
node174->node175 [label="right"];
node175 [label="ID"];
node175->node176 [label=""];
node176 [label="tyt"];
node173->node177 [label="right"];
node177 [label="1000000"];
node178 [label="Switch Statement"];
node106->node178 [label="8"];
node178->node179 [label="condition"];
node179 [label="$"];
node179->node180 [label="right"];
node180 [label="ID"];
node180->node181 [label=""];
node181 [label="aaa"];
node182 [label="Case Statements"];
node178->node182 [label="cases"];
node183 [label="Case"];
node182->node183 [label="1"];
node183->node184 [label="label"];
node184 [label="0"];
node185 [label="Statement List"];
node183->node185 [label=""];
node185->node186 [label="1"];
node186 [label="="];
node186->node187 [label="left"];
node187 [label="$"];
node187->node188 [label="right"];
node188 [label="ID"];
node188->node189 [label=""];
node189 [label="aaa"];
node186->node190 [label="right"];
node190 [label="3"];
node191 [label="Case"];
node182->node191 [label="2"];
node191->node192 [label="label"];
node192 [label="1"];
node193 [label="Statement List"];
node191->node193 [label=""];
node193->node194 [label="1"];
node194 [label="Break"];
node195 [label="Case"];
node182->node195 [label="3"];
node196 [label="Statement List"];
node195->node196 [label=""];
node196->node197 [label="1"];
node197 [label="Break"];
node198 [label="If Statement"];
node106->node198 [label="9"];
node198->node199 [label="condition"];
node199 [label="$"];
node199->node200 [label="right"];
node200 [label="ID"];
node200->node201 [label=""];
node201 [label="aaa"];
node202 [label="Statement List"];
node198->node202 [label="if block"];
node203 [label="Else If Statement List"];
node198->node203 [label="else if block"];
node204 [label="Else If Statement"];
node203->node204 [label="1"];
node204->node205 [label="condition"];
node205 [label="$"];
node205->node206 [label="right"];
node206 [label="ID"];
node206->node207 [label=""];
node207 [label="aaab"];
node208 [label="Statement List"];
node204->node208 [label="else if block"];
node209 [label="Statement List"];
node198->node209 [label="else block"];
}