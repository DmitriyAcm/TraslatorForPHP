digraph G {
node78 [label="Program"];
node79 [label="Program List"];
node78->node79 [label=""];
node80 [label="Function Definition"];
node79->node80 [label="1"];
node81 [label="Function Header"];
node80->node81 [label="header"];
node81->node82 [label="name"];
node82 [label="fibonacci"];
node83 [label="Variable List"];
node81->node83 [label="arguments"];
node84 [label="Variable"];
node83->node84 [label="1"];
node84->node85 [label="name"];
node85 [label="n"];
node86 [label="Statement List"];
node80->node86 [label="body"];
node87 [label="If Statement"];
node86->node87 [label="1"];
node87->node88 [label="condition"];
node88 [label="<"];
node88->node89 [label="left"];
node89 [label="$"];
node89->node90 [label="right"];
node90 [label="ID"];
node90->node91 [label=""];
node91 [label="n"];
node88->node92 [label="right"];
node92 [label="3"];
node93 [label="Statement List"];
node87->node93 [label="if block"];
node93->node94 [label="1"];
node94 [label="Return"];
node94->node95 [label=""];
node95 [label="1"];
node96 [label="Statement List"];
node87->node96 [label="else block"];
node96->node97 [label="1"];
node97 [label="Return"];
node97->node98 [label=""];
node98 [label="+"];
node98->node99 [label="left"];
node99 [label="Function Call"];
node99->node100 [label="left"];
node100 [label="ID"];
node100->node101 [label=""];
node101 [label="fibonacci"];
node102 [label="Expression List"];
node99->node102 [label="right"];
node102->node103 [label="1"];
node103 [label="-"];
node103->node104 [label="left"];
node104 [label="$"];
node104->node105 [label="right"];
node105 [label="ID"];
node105->node106 [label=""];
node106 [label="n"];
node103->node107 [label="right"];
node107 [label="1"];
node98->node108 [label="right"];
node108 [label="Function Call"];
node108->node109 [label="left"];
node109 [label="ID"];
node109->node110 [label=""];
node110 [label="fibonacci"];
node111 [label="Expression List"];
node108->node111 [label="right"];
node111->node112 [label="1"];
node112 [label="-"];
node112->node113 [label="left"];
node113 [label="$"];
node113->node114 [label="right"];
node114 [label="ID"];
node114->node115 [label=""];
node115 [label="n"];
node112->node116 [label="right"];
node116 [label="2"];
node86->node117 [label="2"];
node117 [label="Return"];
node117->node118 [label=""];
node118 [label="NULL"];
node119 [label="For Statement"];
node79->node119 [label="2"];
node120 [label="Expression List"];
node119->node120 [label="initializer"];
node120->node121 [label="1"];
node121 [label="="];
node121->node122 [label="left"];
node122 [label="$"];
node122->node123 [label="right"];
node123 [label="ID"];
node123->node124 [label=""];
node124 [label="n"];
node121->node125 [label="right"];
node125 [label="1"];
node126 [label="Expression List"];
node119->node126 [label="control"];
node126->node127 [label="1"];
node127 [label="<="];
node127->node128 [label="left"];
node128 [label="$"];
node128->node129 [label="right"];
node129 [label="ID"];
node129->node130 [label=""];
node130 [label="n"];
node127->node131 [label="right"];
node131 [label="8"];
node132 [label="Expression List"];
node119->node132 [label="endOfLoop"];
node132->node133 [label="1"];
node133 [label="="];
node133->node134 [label="left"];
node134 [label="$"];
node134->node135 [label="right"];
node135 [label="ID"];
node135->node136 [label=""];
node136 [label="n"];
node133->node137 [label="right"];
node137 [label="+"];
node137->node138 [label="left"];
node138 [label="$"];
node138->node139 [label="right"];
node139 [label="ID"];
node139->node140 [label=""];
node140 [label="n"];
node137->node141 [label="right"];
node141 [label="1"];
node142 [label="Statement List"];
node119->node142 [label="for block"];
node142->node143 [label="1"];
node143 [label="Echo"];
node144 [label="Expression List"];
node143->node144 [label=""];
node144->node145 [label="1"];
node145 [label="."];
node145->node146 [label="left"];
node146 [label="."];
node146->node147 [label="left"];
node147 [label="$"];
node147->node148 [label="right"];
node148 [label="ID"];
node148->node149 [label=""];
node149 [label="n"];
node146->node150 [label="right"];
node150 [label="' number is '"];
node145->node151 [label="right"];
node151 [label="Function Call"];
node151->node152 [label="left"];
node152 [label="ID"];
node152->node153 [label=""];
node153 [label="fibonacci"];
node154 [label="Expression List"];
node151->node154 [label="right"];
node154->node155 [label="1"];
node155 [label="$"];
node155->node156 [label="right"];
node156 [label="ID"];
node156->node157 [label=""];
node157 [label="n"];
}