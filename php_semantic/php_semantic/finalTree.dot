digraph G {
node148 [label="Program"];
node149 [label="Program List"];
node148->node149 [label=""];
node150 [label="Class Declaration"];
node149->node150 [label="1"];
node150->node151 [label="name"];
node151 [label="f"];
node150->node152 [label="extended name"];
node152 [label="g"];
node153 [label="Class Member List"];
node150->node153 [label="members"];
node154->node155 [label=""];
node155 [label="private static"];
node154 [label="Class Property"];
node153->node154 [label="1"];
node156 [label="Variable List"];
node155->node156 [label=""];
node157 [label="Variable"];
node156->node157 [label="1"];
node157->node158 [label="name"];
node158 [label="g"];
node157->node159 [label="value"];
node159 [label="'lol'"];
node160->node161 [label=""];
node161 [label="public static"];
node160 [label="Class Property"];
node153->node160 [label="2"];
node162 [label="Variable List"];
node161->node162 [label=""];
node163 [label="Variable"];
node162->node163 [label="1"];
node163->node164 [label="name"];
node164 [label="sa"];
node163->node165 [label="value"];
node165 [label="'lol'"];
node166->node167 [label=""];
node167 [label="public"];
node166 [label="Class Const"];
node153->node166 [label="3"];
node168 [label="Variable List"];
node167->node168 [label=""];
node169 [label="Variable"];
node168->node169 [label="1"];
node169->node170 [label="name"];
node170 [label="f"];
node169->node171 [label="value"];
node171 [label="'a'"];
node172->node173 [label=""];
node173 [label="public"];
node172 [label="Class Method"];
node153->node172 [label="4"];
node174 [label="Function Definition"];
node173->node174 [label=""];
node175 [label="Function Header"];
node174->node175 [label="header"];
node175->node176 [label="name"];
node176 [label="func"];
node177 [label="Variable List"];
node175->node177 [label="arguments"];
node178 [label="Variable"];
node177->node178 [label="1"];
node178->node179 [label="name"];
node179 [label="gets"];
node180 [label="Statement List"];
node174->node180 [label="body"];
node180->node181 [label="1"];
node181 [label="="];
node181->node182 [label="left"];
node182 [label="$"];
node182->node183 [label="right"];
node183 [label="ID"];
node183->node184 [label=""];
node184 [label="art"];
node181->node185 [label="right"];
node185 [label="'em'"];
node180->node186 [label="2"];
node186 [label="="];
node186->node187 [label="left"];
node187 [label="$"];
node187->node188 [label="right"];
node188 [label="ID"];
node188->node189 [label=""];
node189 [label="fg"];
node186->node190 [label="right"];
node190 [label="+"];
node190->node191 [label="left"];
node191 [label="ID"];
node191->node192 [label=""];
node192 [label="f"];
node190->node193 [label="right"];
node193 [label="'g'"];
node149->node194 [label="2"];
node194 [label="Function Call"];
node194->node195 [label="left"];
node195 [label="ID"];
node195->node196 [label=""];
node196 [label="fgets"];
node197 [label="Expression List"];
node194->node197 [label="right"];
node197->node198 [label="1"];
node198 [label="ID"];
node198->node199 [label=""];
node199 [label="STDIO"];
node149->node200 [label="3"];
node200 [label="Function Call"];
node200->node201 [label="left"];
node201 [label="ID"];
node201->node202 [label=""];
node202 [label="array"];
node203 [label="Expression List"];
node200->node203 [label="right"];
node203->node204 [label="1"];
node204 [label="=>"];
node204->node205 [label="left"];
node205 [label="1"];
node204->node206 [label="right"];
node206 [label="1"];
node203->node207 [label="2"];
node207 [label="=>"];
node207->node208 [label="left"];
node208 [label="2"];
node207->node209 [label="right"];
node209 [label="Function Call"];
node209->node210 [label="left"];
node210 [label="ID"];
node210->node211 [label=""];
node211 [label="array"];
node212 [label="Expression List"];
node209->node212 [label="right"];
node212->node213 [label="1"];
node213 [label="1"];
node212->node214 [label="2"];
node214 [label="2"];
node212->node215 [label="3"];
node215 [label="3"];
node203->node216 [label="3"];
node216 [label="3"];
node203->node217 [label="4"];
node217 [label="4"];
node203->node218 [label="5"];
node218 [label="5"];
node219 [label="Class Declaration"];
node149->node219 [label="4"];
node219->node220 [label="name"];
node220 [label="gf"];
node221 [label="Class Member List"];
node219->node221 [label="members"];
node222 [label="Function Definition"];
node149->node222 [label="5"];
node223 [label="Function Header"];
node222->node223 [label="header"];
node223->node224 [label="name"];
node224 [label="globs"];
node225 [label="Variable List"];
node223->node225 [label="arguments"];
node226 [label="Variable"];
node225->node226 [label="1"];
node226->node227 [label="name"];
node227 [label="sar"];
node228 [label="Statement List"];
node222->node228 [label="body"];
node228->node229 [label="1"];
node229 [label="="];
node229->node230 [label="left"];
node230 [label="$"];
node230->node231 [label="right"];
node231 [label="ID"];
node231->node232 [label=""];
node232 [label="sar"];
node229->node233 [label="right"];
node233 [label="0"];
node234 [label="Function Definition"];
node149->node234 [label="6"];
node235 [label="Function Header"];
node234->node235 [label="header"];
node235->node236 [label="name"];
node236 [label="gl2"];
node237 [label="Variable List"];
node235->node237 [label="arguments"];
node238 [label="Statement List"];
node234->node238 [label="body"];
node149->node239 [label="7"];
node239 [label="="];
node239->node240 [label="left"];
node240 [label="$"];
node240->node241 [label="right"];
node241 [label="ID"];
node241->node242 [label=""];
node242 [label="g"];
node239->node243 [label="right"];
node243 [label="'hhhhhhhhh'"];
node149->node244 [label="8"];
node244 [label="="];
node244->node245 [label="left"];
node245 [label="$"];
node245->node246 [label="right"];
node246 [label="ID"];
node246->node247 [label=""];
node247 [label="tyt"];
node244->node248 [label="right"];
node248 [label="1000000"];
node249 [label="If Statement"];
node149->node249 [label="9"];
node249->node250 [label="condition"];
node250 [label="<"];
node250->node251 [label="left"];
node251 [label="+"];
node251->node252 [label="left"];
node252 [label="$"];
node252->node253 [label="right"];
node253 [label="ID"];
node253->node254 [label=""];
node254 [label="aaaa"];
node251->node255 [label="right"];
node255 [label="*"];
node255->node256 [label="left"];
node256 [label="4"];
node255->node257 [label="right"];
node257 [label="6"];
node250->node258 [label="right"];
node258 [label="/"];
node258->node259 [label="left"];
node259 [label="$"];
node259->node260 [label="right"];
node260 [label="ID"];
node260->node261 [label=""];
node261 [label="tyt"];
node258->node262 [label="right"];
node262 [label="3"];
node263 [label="Statement List"];
node249->node263 [label="if block"];
node264 [label="Switch Statement"];
node149->node264 [label="10"];
node264->node265 [label="condition"];
node265 [label="$"];
node265->node266 [label="right"];
node266 [label="ID"];
node266->node267 [label=""];
node267 [label="aaa"];
node268 [label="Case Statements"];
node264->node268 [label="cases"];
node269 [label="Case"];
node268->node269 [label="1"];
node269->node270 [label="label"];
node270 [label="0"];
node271 [label="Statement List"];
node269->node271 [label=""];
node271->node272 [label="1"];
node272 [label="="];
node272->node273 [label="left"];
node273 [label="$"];
node273->node274 [label="right"];
node274 [label="ID"];
node274->node275 [label=""];
node275 [label="aaa"];
node272->node276 [label="right"];
node276 [label="3"];
node277 [label="Case"];
node268->node277 [label="2"];
node277->node278 [label="label"];
node278 [label="1"];
node279 [label="Statement List"];
node277->node279 [label=""];
node279->node280 [label="1"];
node280 [label="Break"];
node281 [label="Case"];
node268->node281 [label="3"];
node282 [label="Statement List"];
node281->node282 [label=""];
node282->node283 [label="1"];
node283 [label="Break"];
node284 [label="If Statement"];
node149->node284 [label="11"];
node284->node285 [label="condition"];
node285 [label="$"];
node285->node286 [label="right"];
node286 [label="ID"];
node286->node287 [label=""];
node287 [label="aaa"];
node288 [label="Statement List"];
node284->node288 [label="if block"];
node289 [label="Else If Statement List"];
node284->node289 [label="else if block"];
node290 [label="Else If Statement"];
node289->node290 [label="1"];
node290->node291 [label="condition"];
node291 [label="$"];
node291->node292 [label="right"];
node292 [label="ID"];
node292->node293 [label=""];
node293 [label="aaab"];
node294 [label="Statement List"];
node290->node294 [label="else if block"];
node295 [label="Statement List"];
node284->node295 [label="else block"];
}